{"version":3,"sources":["webpack:///./src/components/comment.js","webpack:///./src/components/ticket.js","webpack:///./src/pages/ticket-dashboard.js","webpack:///./src/redux/actions/tickets.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/withRoot.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/avatar.png","webpack:///./src/getPageContext.js","webpack:///./src/components/header.js","webpack:///./src/redux/actions/groups.js","webpack:///./src/components/layout.js"],"names":["Comment","props","react_default","a","createElement","key","ticket_id","id","style","height","minHeight","width","marginTop","borderBottom","display","justifyContent","fontWeight","commenter","fontSize","color","moment","date","fromNow","marginLeft","maxWidth","content","Ticket","_useState","useState","open","setOpen","_useState2","comments","setComments","_useState3","commentText","updateCommentText","title","description","reporter","created","status","getComments","useEffect","then","result","data","classes","className","ticket","onClick","Modal_default","onClose","modal","marginBottom","TextField_default","margin","placeholder","fullWidth","multiline","rows","variant","value","onChange","e","target","InputLabelProps","shrink","Button_default","textTransform","window","sessionStorage","getItem","created_at","concat","commentOnTicket","map","comment","components_comment","propTypes","PropTypes","string","defaultProps","withRoot","withStyles","theme","padding","backgroundColor","top","left","transform","position","fontFamily","overflow","withtheme","API_URL","process","move","source","destination","droppableSource","droppableDestination","sourceClone","Array","from","destClone","removed","splice","index","droppableId","reorder","list","startIndex","endIndex","getItemStyle","isDragging","draggableStyle","Object","assign","userSelect","boxShadow","background","getListStyle","isDraggingOver","borderRight","minWidth","TicketBoard","_this","state","toDo","inProgress","testing","review","done","addATicketOpen","getList","onDragEnd","draggableId","items","setState","moveTicket","componentDidMount","this","fetchData","_this2","location","token","group_id","fetch","headers","Authorization","json","console","log","success","tickets","obj","reporter_email","ticketsObj","filter","dispatchAddTickets","catch","error","componentWillReceiveProps","newProps","method","Content-Type","body","response","fetchComments","handleAddTicket","_this3","preventDefault","document","getElementById","titleError","descriptionError","JSON","stringify","render","_this4","layout","container","emptyTitle","label","textField","FormHelperText_default","emptyTitleText","emptyDescription","emptyDescriptionText","alignItems","type","react_beautiful_dnd_esm","provided","snapshot","ref","innerRef","textAlign","item","draggableProps","dragHandleProps","React","Component","ConnectedTicketBoard","connect","dispatch","ticketObj","object","isRequired","flexDirection","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","func","m","module","exports","require","default","_React$Component","WithRoot","call","muiPageContext","getPageContext","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default","_proto","prototype","jssStyles","querySelector","parentNode","removeChild","react__WEBPACK_IMPORTED_MODULE_1___default","react_jss_lib_JssProvider__WEBPACK_IMPORTED_MODULE_4___default","generateClassName","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","sheetsManager","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_3___default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","shape","p","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","createPageContext","Map","sheetsRegistry","SheetsRegistry","createGenerateClassName","browser","global","__INIT_MATERIAL_UI__","overrides","MuiTypography","body1","subheading","Header","handleDrawerOpen","handleDrawerClose","groups","bind","assertThisInitialized_default","dispatchAddGroups","componentDidUpdate","_classNames","_this$state","styles","root","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","IconButton_default","aria-label","menuButton","hide","Menu_default","Typography_default","noWrap","Drawer_default","anchor","drawer","paper","drawerPaper","drawerHeader","ChevronLeft_default","Divider_default","Grid_default","direction","justify","avatarSection","Avatar_default","alt","src","astronaut","bigAvatar","List_default","groupsSection","group","gatsby_browser_entry","to","ListItem_default","button","ListItemText_default","bottom","ListItemIcon_default","AddBox_default","Dashboard_default","removeItem","reload","SupervisorAccount_default","siteTitle","ConnectedHeader","addGroups","@global","*::-webkit-scrollbar","*::-webkit-scrollbar-thumb","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","flexShrink","mixins","toolbar","paddingTop","&:hover","withTheme","Layout","replace","Fragment","header","site","siteMetadata","_2994927498","node"],"mappings":"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","file":"component---src-pages-ticket-dashboard-js-231e5cec97a4e4b17829.js","sourcesContent":["import React from \"react\"\nimport moment from \"moment\"\n\nconst Comment = props => (\n  <div\n    key={props.ticket_id}\n    id={props.ticket_id}\n    style={{\n      height: \"auto\",\n      minHeight: \"5rem\",\n      width: \"100%\",\n      marginTop: \"2rem\",\n      borderBottom: \"1px solid rgba(0,0,0,.15)\",\n    }}\n  >\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <p style={{ fontWeight: \"600\" }}>{props.commenter}</p>\n      <p\n        style={{\n          fontSize: \".8rem\",\n          fontWeight: \"600\",\n          color: \"rgb(120,120,120)\",\n        }}\n      >\n        {moment(props.date).fromNow()}\n      </p>\n    </div>\n    <p style={{ marginLeft: 20, maxWidth: \"90%\" }}>{props.content}</p>\n  </div>\n)\n\nexport default Comment\n","import React, { useState, useEffect } from \"react\"\nimport Modal from \"@material-ui/core/Modal\"\nimport PropTypes from \"prop-types\"\nimport moment from \"moment\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Comment from \"./comment\"\nimport { withStyles, withTheme } from \"@material-ui/core/styles\"\nimport withRoot from \"../withRoot\"\n\nconst styles = theme => ({\n  ticket: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"2rem\",\n  },\n  modal: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"white\",\n    width: \"50rem\",\n    height: \"40rem\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\",\n    padding: \"3rem\",\n    fontFamily: \"Lato\",\n    overflow: \"scroll\",\n  },\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"500\",\n  },\n  description: {\n    fontSize: \".9rem\",\n  },\n})\n\nconst Ticket = props => {\n  const [open, setOpen] = useState(false)\n  const [comments, setComments] = useState([])\n  const [commentText, updateCommentText] = useState(\"\")\n  const {\n    title,\n    description,\n    reporter,\n    created,\n    status,\n    id,\n    getComments,\n  } = props\n\n  useEffect(() => {\n    getComments(id).then(result => {\n      setComments(result.data)\n    })\n  }, [])\n  const classes = props.classes\n  return (\n    <div>\n      <div className={classes.ticket} onClick={() => setOpen(true)}>\n        <h4>{props.title}</h4>\n        <p>{props.description}</p>\n      </div>\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div className={classes.modal}>\n          <div style={{ width: \"100%\" }}>\n            <h4 className={classes.title}>{title}</h4>\n            <p className={classes.description}>\n              <span\n                style={{\n                  display: \"block\",\n                  fontWeight: \"600\",\n                  fontSize: \".9rem\",\n                  marginBottom: \"1rem\",\n                }}\n              >\n                Description:\n              </span>\n              {description}\n            </p>\n            <TextField\n              id=\"outlined-full-width\"\n              style={{ margin: \"8px 8px 20px 0px\" }}\n              placeholder=\"Add a comment\"\n              fullWidth\n              multiline\n              rows=\"2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={commentText}\n              onChange={e => updateCommentText(e.target.value)}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: \"none\" }}\n              onClick={() => {\n                if (typeof window !== \"undefined\") {\n                  setComments([\n                    {\n                      ticket_id: \"new\",\n                      content: commentText,\n                      commenter: sessionStorage.getItem(\"ticketing_username\"),\n                      created_at: moment(),\n                    },\n                    ...comments,\n                  ])\n                  props.commentOnTicket(id, commentText)\n                }\n              }}\n            >\n              Comment\n            </Button>\n            {comments.map(comment => (\n              <Comment\n                key={comment.ticket_id}\n                content={comment.content}\n                commenter={comment.commenter}\n                date={comment.created_at}\n                ticket_id={comment.ticket_id}\n              />\n            ))}\n          </div>\n          <div style={{ marginLeft: \"4rem\" }}>\n            <p className={classes.status}>\n              <span\n                style={{\n                  display: \"block\",\n                  fontWeight: \"600\",\n                  fontSize: \".7rem\",\n                }}\n              >\n                STATUS:\n              </span>\n              {status}\n            </p>\n            <p className={classes.reporter}>\n              <span\n                style={{\n                  display: \"block\",\n                  fontWeight: \"600\",\n                  fontSize: \".7rem\",\n                }}\n              >\n                REPORTER:\n              </span>\n              {reporter}\n            </p>\n            <p className={classes.created}>\n              <span\n                style={{\n                  display: \"block\",\n                  fontWeight: \"600\",\n                  fontSize: \".7rem\",\n                }}\n              >\n                CREATED:\n              </span>\n              {moment(created).fromNow()}\n            </p>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nTicket.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nTicket.defaultProps = {}\n\nexport default withRoot(withStyles(styles, { withtheme: true })(Ticket))\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Ticket from \"../components/ticket\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport PropTypes from \"prop-types\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport { addTickets } from \"../redux/actions/tickets\"\nimport { connect } from \"react-redux\"\nimport withRoot from \"../withRoot\"\nconst { API_URL } = process.env\n\n//Fetch tickets & display them appropriately\n//When ticket is moved, update server...\n\nconst styles = theme => ({\n  modal: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"white\",\n    width: \"50rem\",\n    height: \"30rem\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    position: \"absolute\",\n    padding: \"3rem\",\n    fontFamily: \"Lato\",\n    overflow: \"scroll\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"60%\",\n    margin: \"0px auto\",\n  },\n})\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source)\n  const destClone = Array.from(destination)\n  const [removed] = sourceClone.splice(droppableSource.index, 1)\n\n  destClone.splice(droppableDestination.index, 0, removed)\n\n  const result = {}\n  result[droppableSource.droppableId] = sourceClone\n  result[droppableDestination.droppableId] = destClone\n\n  return result\n}\n\n// a function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nconst grid = 15\nconst margin = 20\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  // padding: grid * 2,\n  margin: `0 ${margin}px ${grid}px ${margin}px`,\n  height: \"10rem\",\n  width: \"15rem\",\n  boxShadow: \"1px 1px 5px 1px rgba(0,0,0,.2)\",\n  // change background colour if dragging\n  background: isDragging ? \"rgb(220,220,250)\" : \"white\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n})\n\nconst getListStyle = isDraggingOver => ({\n  borderRight: \"1px solid rgba(23,9,45,.2)\",\n  background: isDraggingOver ? \"rgba(150,150,250,.2)\" : \"white\",\n  padding: grid,\n  width: \"19rem\",\n  minWidth: \"19rem\",\n})\n\nclass TicketBoard extends React.Component {\n  classes = this.props.classes\n  state = {\n    toDo: [],\n    inProgress: [],\n    testing: [],\n    review: [],\n    done: [],\n    addATicketOpen: false,\n  }\n\n  componentDidMount() {\n    this.fetchData(this.props)\n  }\n\n  fetchData(props) {\n    if (props.location.state) {\n      const token = sessionStorage.getItem(\"ticketing_token\")\n      const group_id = props.location.state.group_id\n      // const ticketArr = props.data.tickets.filter(\n      //   ticketObj => ticketObj.group_id === group_id\n      // )\n      // console.log(\"ticketArr: \", ticketArr)\n      // if (ticketArr.length > 0) {\n      //   this.setState(ticketArr[0].tickets)\n      // } else {\n      fetch(`${API_URL}/ticket/list/${group_id}`, {\n        headers: {\n          Authorization: token,\n        },\n      })\n        .then(result => result.json())\n        .then(result => {\n          console.log(result)\n          if (result.success) {\n            const data = result.data\n            let tickets = data.map(obj => ({\n              id: obj.id,\n              content: {\n                title: obj.title,\n                description: obj.description,\n                created: obj.created_at,\n                reporter: obj.reporter_email,\n              },\n              status: obj.status,\n            }))\n            const ticketsObj = {\n              toDo: tickets.filter(ticket => ticket.status === \"toDo\"),\n              inProgress: tickets.filter(\n                ticket => ticket.status === \"inProgress\"\n              ),\n              testing: tickets.filter(ticket => ticket.status === \"testing\"),\n              review: tickets.filter(ticket => ticket.status === \"review\"),\n              done: tickets.filter(ticket => ticket.status === \"done\"),\n            }\n            props.dispatchAddTickets({ group_id, tickets: ticketsObj })\n            this.setState(ticketsObj)\n          } else {\n            //TODO: Handle unsuccessful call\n          }\n        })\n        .catch(error => {\n          console.log(\"error: \", error)\n          //TODO: handle error\n        })\n    }\n    // }\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.fetchData(newProps)\n  }\n\n  getList = id => this.state[id]\n\n  moveTicket(ticket_id, status) {\n    console.log(\"move ticket: \", ticket_id, status)\n    const data = `ticket_id=${ticket_id}&status=${status}`\n    console.log(data)\n    fetch(`${API_URL}/ticket/move`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: sessionStorage.getItem(\"ticketing_token\"),\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: data,\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.success) {\n        } else {\n          console.log(response)\n        }\n      })\n      .catch(error => console.log(error))\n  }\n  commentOnTicket(ticket_id, comment) {\n    fetch(`${API_URL}/ticket/admin-comment`, {\n      method: \"POST\",\n      headers: {\n        Authorization: sessionStorage.getItem(\"ticketing_token\"),\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `id=${ticket_id}&comment=${comment}`,\n    }).then(result => {\n      console.log(result)\n    })\n  }\n  fetchComments(ticket_id) {\n    return fetch(`${API_URL}/ticket/comments/${ticket_id}`)\n      .then(result => result.json())\n      .catch(error => {\n        console.log(error)\n      })\n  }\n  onDragEnd = result => {\n    const { source, destination, draggableId } = result\n    // dropped outside the list\n    if (!destination) {\n      return\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      )\n      let colId = source.droppableId\n      let state = {}\n      state[colId] = items\n      this.setState(state)\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      )\n      let state = {}\n      state[source.droppableId] = result[source.droppableId]\n      state[destination.droppableId] = result[destination.droppableId]\n      this.setState(state)\n      this.moveTicket(draggableId, destination.droppableId)\n    }\n  }\n  handleAddTicket(e) {\n    e.preventDefault()\n    const title = document.getElementById(\"title\").value\n    const description = document.getElementById(\"description\").value\n    if (!title || !description) {\n      if (!title) {\n        this.setState({ titleError: true })\n      }\n      if (!description) {\n        this.setState({ descriptionError: true })\n      }\n    } else {\n      this.setState({\n        titleError: false,\n        descriptionError: false,\n      })\n      const data = {\n        title: title,\n        description: description,\n        group_id: this.props.location.state.group_id,\n        reporter_email: sessionStorage.getItem(\"ticketing_username\"),\n      }\n      fetch(`${API_URL}/ticket/create`, {\n        method: \"POST\",\n        headers: {\n          Authorization: sessionStorage.getItem(\"ticketing_token\"),\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then(result => {\n          this.setState({\n            addATicketOpen: false,\n          })\n        })\n        .catch(error => {\n          console.log(error)\n          this.setState({\n            addATicketOpen: false,\n          })\n        })\n    }\n  }\n  render() {\n    return (\n      <Layout>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{\n            textTransform: \"none\",\n            marginLeft: \"90%\",\n            marginBottom: \"1rem\",\n          }}\n          onClick={() => this.setState({ addATicketOpen: true })}\n        >\n          Add a Ticket\n        </Button>\n        <Modal\n          open={this.state.addATicketOpen}\n          onClose={() => {\n            this.fetchData(this.props)\n            this.setState({ addATicketOpen: false })\n          }}\n        >\n          <div className={this.classes.modal}>\n            <form className={this.classes.container}>\n              <TextField\n                error={this.state.emptyTitle}\n                id=\"title\"\n                label=\"Title\"\n                className={this.classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <FormHelperText id=\"title-error-text\">\n                {this.state.emptyTitleText}\n              </FormHelperText>\n\n              <TextField\n                error={this.state.emptyDescription}\n                id=\"description\"\n                label=\"Description\"\n                className={this.classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                multiline\n                rows=\"6\"\n              />\n              <FormHelperText id=\"description-error-text\">\n                {this.state.emptyDescriptionText}\n              </FormHelperText>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                style={{ marginTop: \"1rem\" }}\n                onClick={e => this.handleAddTicket(e)}\n              >\n                Add Ticket\n              </Button>\n            </form>\n          </div>\n        </Modal>\n        <div style={{ display: \"flex\" }}>\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <Droppable droppableId=\"toDo\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  <h5 style={{ textAlign: \"center\" }}>To Do</h5>\n                  {this.state.toDo.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <Ticket\n                            created={item.content.created}\n                            reporter={item.content.reporter}\n                            title={item.content.title}\n                            description={item.content.description}\n                            id={item.id}\n                            status=\"To Do\"\n                            getComments={this.fetchComments}\n                            commentOnTicket={this.commentOnTicket}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <Droppable droppableId=\"inProgress\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  <h5 style={{ textAlign: \"center\" }}>In Progress</h5>\n                  {this.state.inProgress.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <Ticket\n                            created={item.content.created}\n                            reporter={item.content.reporter}\n                            title={item.content.title}\n                            description={item.content.description}\n                            id={item.id}\n                            status=\"In Progress\"\n                            getComments={this.fetchComments}\n                            commentOnTicket={this.commentOnTicket}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <Droppable droppableId=\"testing\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  <h5 style={{ textAlign: \"center\" }}>Testing</h5>\n                  {this.state.testing.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                      className={this.classes.ticket}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          className={this.classes.ticket}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <Ticket\n                            created={item.content.created}\n                            reporter={item.content.reporter}\n                            title={item.content.title}\n                            description={item.content.description}\n                            id={item.id}\n                            status=\"Testing\"\n                            getComments={this.fetchComments}\n                            commentOnTicket={this.commentOnTicket}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <Droppable droppableId=\"review\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}\n                >\n                  <h5 style={{ textAlign: \"center\" }}>Review</h5>\n                  {this.state.review.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <Ticket\n                            created={item.content.created}\n                            reporter={item.content.reporter}\n                            title={item.content.title}\n                            description={item.content.description}\n                            id={item.id}\n                            status=\"Review\"\n                            getComments={this.fetchComments}\n                            commentOnTicket={this.commentOnTicket}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            <Droppable droppableId=\"done\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={{\n                    ...getListStyle(snapshot.isDraggingOver),\n                    borderRight: \"none\",\n                  }}\n                >\n                  <h5 style={{ textAlign: \"center\" }}>Done</h5>\n                  {this.state.done.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <Ticket\n                            created={item.content.created}\n                            reporter={item.content.reporter}\n                            title={item.content.title}\n                            description={item.content.description}\n                            id={item.id}\n                            status=\"Done\"\n                            getComments={this.fetchComments}\n                            commentOnTicket={this.commentOnTicket}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { data: state.tickets }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return { dispatchAddTickets: ticketObj => dispatch(addTickets(ticketObj)) }\n}\n\nconst ConnectedTicketBoard = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TicketBoard)\n\nTicketBoard.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withRoot(withStyles(styles)(ConnectedTicketBoard))\n","export const addTickets = ticket => ({\n  type: \"ADD_TICKET\",\n  ticket,\n})\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { MuiThemeProvider } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport JssProvider from \"react-jss/lib/JssProvider\"\nimport getPageContext from \"./getPageContext\"\n\nfunction withRoot(Component) {\n  class WithRoot extends React.Component {\n    constructor(props) {\n      super(props)\n      this.muiPageContext = getPageContext()\n    }\n\n    componentDidMount() {\n      // Remove the server-side injected CSS.\n      const jssStyles = document.querySelector(\"#jss-server-side\")\n      if (jssStyles && jssStyles.parentNode) {\n        jssStyles.parentNode.removeChild(jssStyles)\n      }\n    }\n\n    render() {\n      return (\n        <JssProvider generateClassName={this.muiPageContext.generateClassName}>\n          {/* Make the theme available down the React tree. */}\n          <MuiThemeProvider\n            theme={this.muiPageContext.theme}\n            sheetsManager={this.muiPageContext.sheetsManager}\n          >\n            {/* Kickstart a simple baseline to build upon. */}\n            <CssBaseline />\n            <Component {...this.props} />\n          </MuiThemeProvider>\n        </JssProvider>\n      )\n    }\n  }\n\n  return WithRoot\n}\n\nexport default withRoot\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/avatar-2aee737878818d0ad5453d604fa5a81d.png\";","/* eslint-disable no-underscore-dangle...*/\n\nimport { SheetsRegistry } from \"jss\"\nimport {\n  createMuiTheme,\n  createGenerateClassName,\n} from \"@material-ui/core/styles\"\n\n// Create a theme with Gatsby brand colors. You can choose your own\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#663399\",\n    },\n    secondary: {\n      main: \"#ffb238\",\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n})\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  }\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext()\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext()\n  }\n\n  return global.__INIT_MATERIAL_UI__\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Divider from \"@material-ui/core/Divider\"\nimport classNames from \"classnames\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport List from \"@material-ui/core/List\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport DashboardIcon from \"@material-ui/icons/Dashboard\"\nimport AddBoxIcon from \"@material-ui/icons/AddBox\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport astronaut from \"../images/avatar.png\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\"\nimport { Link } from \"gatsby\"\nimport { connect } from \"react-redux\"\nimport { addGroups } from \"../redux/actions/groups\"\nimport withRoot from \"../withRoot\"\n\nconst { API_URL } = process.env\n\nconst drawerWidth = 240\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Lato\",\n  },\n  overrides: {\n    MuiTypography: {\n      body1: {\n        color: \"white\",\n      },\n      subheading: {\n        color: \"white\",\n      },\n    },\n  },\n})\n\nconst styles = theme => ({\n  \"@global\": {\n    \"*::-webkit-scrollbar\": {\n      width: \".5rem\",\n    },\n    \"*::-webkit-scrollbar-thumb\": {\n      backgroundColor: \"rgba(0,0,0,1)\",\n    },\n  },\n  root: {\n    display: \"flex\",\n    color: \"white !important\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#3A1772\",\n    padding: \"0px\",\n    overflow: \"hidden\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  avatarSection: {\n    padding: \"1rem\",\n    backgroundColor: \"rgba(255, 255, 255, .15)\",\n    fontFamily: \"Roboto Condensed\",\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 60,\n    height: 60,\n  },\n  groupsSection: {\n    boxShadow: \"0px -2px 1px 1px rgba(0,0,0,.1)\",\n    paddingTop: \"0px\",\n    height: \"65%\",\n    overflow: \"scroll\",\n  },\n  group: {\n    borderBottom: \".5px solid rgba(255,255,255,.1)\",\n    textAlign: \"center\",\n    transition: \"background-color .7s\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(250, 250, 250, .2)\",\n      transition: \"background-color .7s\",\n    },\n  },\n})\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      groups: [],\n    }\n    this.fetchData = this.fetchData.bind(this)\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  fetchData() {\n    fetch(`${API_URL}/group/list`, {\n      headers: {\n        Authorization: window.sessionStorage.getItem(\"ticketing_token\"),\n      },\n    })\n      .then(result => result.json())\n      .then(result => {\n        if (result.data) {\n          this.props.dispatchAddGroups(result.data)\n          this.setState({\n            groups: this.props.data.groups,\n          })\n        }\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true })\n  }\n  handleDrawerClose = () => {\n    this.setState({ open: false })\n  }\n  componentDidUpdate() {\n    const { open } = this.state\n\n    open\n      ? (document.getElementById(\n          \"mainContentLayout\"\n        ).style.margin = `6rem 3rem 6rem 15rem`)\n      : (document.getElementById(\n          \"mainContentLayout\"\n        ).style.margin = `6rem 3rem`)\n  }\n\n  render() {\n    const { open, groups } = this.state\n    const classes = this.props.classes\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <header className={classes.root}>\n          <AppBar\n            position=\"fixed\"\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open Drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              {open ? (\n                false\n              ) : (\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                  bOnline\n                </Typography>\n              )}\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                style={{ left: \"30px\", position: \"fixed\", color: \"white\" }}\n              >\n                bOnline\n              </Typography>\n              <IconButton color=\"inherit\" onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className={classes.avatarSection}\n            >\n              <Avatar\n                alt=\"Remy\"\n                src={astronaut}\n                className={classes.bigAvatar}\n              />\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                {typeof window === \"undefined\" //Gatsby production build shenanigans\n                  ? \"\"\n                  : sessionStorage.getItem(\"ticketing_username\")}\n              </Typography>\n            </Grid>\n            <List className={classes.groupsSection}>\n              {groups.map(group => (\n                <Link\n                  key={group.group_id}\n                  to=\"/ticket-dashboard\"\n                  state={{ group_id: group.group_id }}\n                >\n                  <ListItem\n                    id={group.group_id}\n                    className={classes.group}\n                    button\n                    key={group.group_id}\n                  >\n                    <ListItemText\n                      style={{ color: \"white !important\" }}\n                      primary={group.title}\n                    />\n                  </ListItem>\n                </Link>\n              ))}\n            </List>\n            <List\n              className={classes.drawerPaper}\n              style={{ bottom: \"0rem\", position: \"fixed\", color: \"white\" }}\n            >\n              <Link to=\"/group/create\">\n                <ListItem button>\n                  <ListItemIcon color=\"inherit\">\n                    <AddBoxIcon style={{ color: \"white\" }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Create a Group\" />\n                </ListItem>\n              </Link>\n              <Link to=\"/\">\n                <ListItem button>\n                  <ListItemIcon color=\"inherit\">\n                    <DashboardIcon style={{ color: \"white\" }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Dashboard\" />\n                </ListItem>\n              </Link>\n              <div\n                onClick={() => {\n                  sessionStorage.removeItem(\"ticketing_token\")\n                  window.location.reload()\n                }}\n              >\n                <ListItem button>\n                  <ListItemIcon color=\"inherit\">\n                    <SupervisorAccountIcon style={{ color: \"white\" }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Log Out\" />\n                </ListItem>\n              </div>\n            </List>\n          </Drawer>\n        </header>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nconst mapStateToProps = state => {\n  return { data: state.groups }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return { dispatchAddGroups: groups => dispatch(addGroups(groups)) }\n}\n\nconst ConnectedHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header)\n\nexport default withStyles(styles, { withTheme: true })(ConnectedHeader)\n","export const addGroups = groups => ({\n  type: \"ADD_GROUPS\",\n  groups,\n})\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, groups }) => {\n  //for production build (gatsby shenanigans)\n  if (typeof window !== \"undefined\") {\n    if (!sessionStorage.getItem(\"ticketing_token\")) {\n      if (\n        window.location.pathname !== \"ticketing-dashboard/user/log-in\" &&\n        window.location.pathname !== \"ticketing-dashboard/user/sign-up\"\n      ) {\n        window.location.replace(\"/user/log-in\")\n      }\n    }\n  }\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <div\n            id=\"mainContentLayout\"\n            style={{\n              margin: `5rem 3rem`,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0,\n              transition: \"margin .4s\",\n            }}\n          >\n            <main>{children}</main>\n            <footer />\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}